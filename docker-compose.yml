version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-curriculum-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:4000
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - curriculum-network
    restart: unless-stopped
    command: npm run dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-curriculum-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - FRONTEND_URL=http://localhost:3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LOG_LEVEL=info
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
    networks:
      - curriculum-network
    restart: unless-stopped
    command: npm run dev

  # 로컬 개발용 Supabase (선택사항)
  # 실제 운영에서는 Supabase 클라우드 서비스 사용
  supabase-db:
    image: supabase/postgres:15.1.0.117
    container_name: ai-curriculum-db
    ports:
      - "54322:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_super_secret_and_long_postgres_password}
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    networks:
      - curriculum-network
    restart: unless-stopped
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  # Redis for caching (선택사항)
  redis:
    image: redis:7.2-alpine
    container_name: ai-curriculum-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - curriculum-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy (선택사항)
  nginx:
    image: nginx:alpine
    container_name: ai-curriculum-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - curriculum-network
    restart: unless-stopped

volumes:
  supabase-db-data:
    driver: local
  redis-data:
    driver: local

networks:
  curriculum-network:
    driver: bridge
    name: ai-curriculum-network